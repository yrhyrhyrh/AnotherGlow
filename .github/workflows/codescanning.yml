name: "SAST, DAST, Vulnerability Scanning"

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  schedule:
    - cron: '28 23 * * 6'

jobs:
  analyze:
    name: Analyze (${{ matrix.language }})
    runs-on: ${{ (matrix.language == 'swift' && 'macos-latest') || 'ubuntu-latest' }}
    permissions:
      security-events: write
      packages: read
      actions: read
      contents: read

    strategy:
      fail-fast: false
      matrix:
        include:
        - language: actions
          build-mode: none
        - language: csharp
          build-mode: none
        - language: javascript-typescript
          build-mode: none

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Initialize CodeQL
      uses: github/codeql-action/init@v3
      with:
        languages: ${{ matrix.language }}
        build-mode: ${{ matrix.build-mode }}

    - if: matrix.build-mode == 'manual'
      shell: bash
      run: |
        echo 'Replace this with build commands if needed for manual mode'
        exit 1

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3
      with:
        category: "/language:${{matrix.language}}"
    - name: Upload CodeQL Database Artifact
      if: ${{ matrix.language == 'actions' }}  # Optional: restrict to a specific language
      uses: actions/upload-artifact@8e2d2781d3de8cb97bc8659efc1c6ab1526b6792
      with:
        name: codeql-database-${{ matrix.language }}
        path: /home/runner/work/_temp/codeql_databases/${{ matrix.language }}.zip

  zap-scan:
    name: ZAP Full Scan
    runs-on: ubuntu-latest
    steps:
    - name: ZAP Full Scan
      uses: zaproxy/action-full-scan@v0.12.0
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        target: "http://your-url"
        fail_action: false
        allow_issue_writing: false

  snyk:
    name: Snyk Security Scan
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Run Snyk
      uses: snyk/actions@0.4.0
      with:
        command: test
        args: --all-projects
        json: true
      env:
        SNYK_TOKEN: "ddf4d441-9b5a-416c-a1fd-1b8ea374f8f7"
